generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model books {
  id           Int     @id @default(autoincrement())
  title        String
  author       String
  description  String
  price        Int
  publisher    String?
  publish_date String? @map("publish date")
  genre        String?
  order        order[]
}

model order_product {
  id      Int     @id @default(autoincrement())
  user    users   @relation(fields: [usersId], references: [id])
  usersId Int
  is_cart Boolean
  order   order[]
}

model order {
  id            Int           @id @default(autoincrement())
  books         books         @relation(fields: [booksId], references: [id])
  booksId       Int
  order_product order_product @relation(fields: [cartId], references: [id])
  cartId        Int
  quantity      Int
}

model users {
  id            Int             @id @default(autoincrement())
  firstName     String?
  lastName      String?
  username      String          @unique
  email         String?         @unique
  streetAddress String?
  city          String?
  state         String?
  zipCode       String?
  phone         String?         @unique
  admin         Boolean         @default(false)
  password      String
  order_product order_product[]
}

// cartItem -- order_product
// orderId, productId, qty

// order 
// id, userId, isCart, finalPrice

// user
// order gets created when user registers 
// create route called submit (put) updates current order to completed and add cart

// model Cart {
//   id          Int           @id @default(autoincrement())
//   user        User          @relation(fields: [userId], references: [id])
//   userId      Int
//   is_cart     Boolean
//   CartProduct CartProduct[]
// }

// model CartProduct {
//   id        Int     @id @default(autoincrement())
//   product   Product @relation(fields: [productId], references: [id])
//   productId Int
//   cart      Cart    @relation(fields: [cartId], references: [id])
//   cartId    Int
//   quantity  Int
// }

// model Product {
//   id                Int           @id @default(autoincrement())
//   name              String
//   price             Float
//   image_url         String
//   description       String
//   country_of_origin String
//   CartProduct       CartProduct[]
// }

// model User {
//   id         Int    @id @default(autoincrement())
//   username   String
//   password   String
//   first_name String
//   last_name  String
//   role       String
//   Cart       Cart[]
// }
